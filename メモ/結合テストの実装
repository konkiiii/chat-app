・結合テストの実装
  ・結合テストの準備
    ・作業ファイルの作成
      % rails g rspec:system user
      % rails g rspec:system room
      % rails g rspec:system message
      spec/system/messages_spec.rb,rooms_spec.rb,users_spec.rb
  ・ユーザーログイン機能
    ・雛形記述(spec/system/users_spec.rb)
      require 'rails_helper'
      RSpec.describe 'ユーザーログイン機能', type: :system do
        it 'ログインしていない状態でトップページにアクセスした場合、サインインページに移動する' do
          # トップページに遷移する
          # ログインしていない場合、サインインページに遷移していることを確認する
        end
        it 'ログインに成功し、トップページに遷移する' do
          # 予め、ユーザーをDBに保存する
          # サインインページへ移動する
          # ログインしていない場合、サインインページに遷移していることを確認する
          # すでに保存されているユーザーのemailとpasswordを入力する
          # ログインボタンをクリックする
          # トップページに遷移していることを確認する
        end
        it 'ログインに失敗し、再びサインインページに戻ってくる' do
          # 予め、ユーザーをDBに保存する
          # トップページに遷移する
          # ログインしていない場合、サインインページに遷移していることを確認する
          # 誤ったユーザー情報を入力する
          # ログインボタンをクリックする
          # サインインページに戻ってきていることを確認する
        end
      end
    ・未ログイン状態のとき、サインインページに移動する
      # トップページに遷移する
      visit root_path
      # ログインしていない場合、サインインページに遷移していることを確認する
      expect(current_path).to eq(new_user_session_path)
    ・ログインに成功し、トップページに遷移する
      # 予め、ユーザーをDBに保存する
      @user = FactoryBot.create(:user)
      # サインインページへ移動する
      visit new_user_session_path
      # ログインしていない場合、サインインページに遷移していることを確認する
      expect(current_path).to new_user_session_path
      # すでに保存されているユーザーのemailとpasswordを入力する
      fill_in 'Email', with: @user.email
      fill_in 'Password', with: @user.password
      # ログインボタンをクリックする
      click_on("Log in")
      # トップページに遷移していることを確認する
      expect(current_path).to eq(root_path)
    ・ログインに失敗し、再びサインインページに戻ってくる
      # 誤ったユーザー情報を入力する
      fill_in 'Email', with: 'test'
      fill_in 'Password', with: 'test'
      # サインインページに戻ってきていることを確認する
      expect(current_path).to eq(new_user_session_path)
      #他の項目は上と同じ
  ・メッセージ投稿機能
  
  ・チャット削除機能